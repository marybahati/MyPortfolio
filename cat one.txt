No 1-4

class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
 addProduct(productId, name, price, quantity){
    let product = {productId:productId,name:name,price:price, quantity: quantity}
    this.products.push(product)
    return this.products
  }
  getProduct(productId){
    for(var i=0;i<this.products.length; i++){
      let product=this.products[i]
      if(product.id === productId){
        return product
      }
    }
  }
  removeProduct(productId){
    let product=this.getProduct(productId);
    let index= this.products.indexOf(product)
    this.products.splice(index,1)
  }
  
   
updateProduct(productId, name, price, quantity) {
    let product = this.getProduct(productId);
    let myIndex = this.products.indexOf(product);
    var newProduct = this.products[myIndex] = {productId:productId, name:name, price:price, quantity:quantity};
    this.products.push(newProduct)
    
    
   }
  
}
  let mumMboga = new MumMboga();
  mumMboga.addProduct(1,"Tomato",20,5);
  mumMboga.addProduct(2,"kales",40,6);
  mumMboga.addProduct(3,"cabbage",45,9);
  //mumMboga.removeProduct(3,"cabbage",45,9);
  mumMboga.updateProduct(4,"onions",90,9);

  //mumMboga.removeProduct(1);
 console.log(mumMboga.products);


ANS
[[object Object] {
  name: "Tomato",
  price: 20,
  productId: 1,
  quantity: 5
}, [object Object] {
  name: "kales",
  price: 40,
  productId: 2,
  quantity: 6
}, [object Object] {
  name: "cabbage",
  price: 45,
  productId: 3,
  quantity: 9
}, [object Object] {
  name: "onions",
  price: 90,
  productId: 4,
  quantity: 9
}]

QUIZ 5-7
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
   addProduct(productId, name, price, quantity){
    let product = {productId:productId,name:name,price:price, quantity: quantity}
    this.products.push(product)
    return this.products
  }
  
  getProductCatalog(){
    return this.products
  }
  addToCart( cartId, product, orderQuantity, customerId){
    let cart = { cartId: cartId,product:product,orderQuantity:orderQuantity, customerId:customerId}
    this.carts.push(cart)
    return this.carts
  }
    getProduct(cartId){
    for(var i=0;i<this.carts.length; i++){
      let cart=this.carts[i]
      if(cart.id === cartId){
        return cart
      }
    }
  }
  removeFromCart(cartId){
    let cart=this.getProduct(cartId);
    let index= this.carts.indexOf(cart)
    this.carts.splice(index,1)
  }
}
let mumMboga = new MumMboga();
   mumMboga.addProduct(1,"Tomato",20,5);
   mumMboga.addProduct(2,"kales",40,6);
  mumMboga.addProduct(3,"cabbage",45,9);

 mumMboga.addToCart(112,"Tomato",20,590);
  mumMboga.addToCart(223,"kales",40,609);
  mumMboga.addToCart(343,"cabbage",45,934);
 mumMboga.removeFromCart(343,"cabbage",45,934);

 mumMboga.removeFromCart(1)
 console.log(mumMboga.products);
 console.log(mumMboga.carts);

ANS
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
   addProduct(productId, name, price, quantity){
    let product = {productId:productId,name:name,price:price, quantity: quantity}
    this.products.push(product)
    return this.products
  }
  
  getProductCatalog(){
    return this.products
  }
  addToCart( cartId, product, orderQuantity, customerId){
    let cart = { cartId: cartId,product:product,orderQuantity:orderQuantity, customerId:customerId}
    this.carts.push(cart)
    return this.carts
  }
    getProduct(cartId){
    for(var i=0;i<this.carts.length; i++){
      let cart=this.carts[i]
      if(cart.id === cartId){
        return cart
      }
    }
  }
  removeFromCart(cartId){
    let cart=this.getProduct(cartId);
    let index= this.carts.indexOf(cart)
    this.carts.splice(index,1)
  }
}
let mumMboga = new MumMboga();
   mumMboga.addProduct(1,"Tomato",20,5);
   mumMboga.addProduct(2,"kales",40,6);
  mumMboga.addProduct(3,"cabbage",45,9);

 mumMboga.addToCart(112,"Tomato",20,590);
  mumMboga.addToCart(223,"kales",40,609);
  mumMboga.addToCart(343,"cabbage",45,934);
 mumMboga.removeFromCart(343,"cabbage",45,934);

 mumMboga.removeFromCart(1)
 console.log(mumMboga.products);
 console.log(mumMboga.carts);

class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
   addProduct(productId, name, price, quantity){
    let product = {productId:productId,name:name,price:price, quantity: quantity}
    this.products.push(product)
    return this.products
  }
  
  getProductCatalog(){
    return this.products
  }
  addToCart( cartId, product, orderQuantity, customerId){
    let cart = { cartId: cartId,product:product,orderQuantity:orderQuantity, customerId:customerId}
    this.carts.push(cart)
    return this.carts
  }
    getProduct(cartId){
    for(var i=0;i<this.carts.length; i++){
      let cart=this.carts[i]
      if(cart.id === cartId){
        return cart
      }
    }
  }
  removeFromCart(cartId){
    let cart=this.getProduct(cartId);
    let index= this.carts.indexOf(cart)
    this.carts.splice(index,1)
  }
}
let mumMboga = new MumMboga();
   mumMboga.addProduct(1,"Tomato",20,5);
   mumMboga.addProduct(2,"kales",40,6);
  mumMboga.addProduct(3,"cabbage",45,9);

 mumMboga.addToCart(112,"Tomato",20,590);
  mumMboga.addToCart(223,"kales",40,609);
  mumMboga.addToCart(343,"cabbage",45,934);
 //mumMboga.removeFromCart(343,"cabbage",45,934);

 //mumMboga.removeFromCart(1)
 console.log(mumMboga.products);
 console.log(mumMboga.carts);

QUIZ 8

class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
createOrder(orderId, cartId){
  let order = { orderId: orderId,cartId:cartId}
  this.orders.push(order)
    return this.orders
}

}
let mumMboga = new MumMboga();
   mumMboga.createOrder(900,112);
  mumMboga.createOrder(345,223);
  mumMboga.createOrder(897,343);
console.log(mumMboga.orders);

ANS
[[object Object] {
  cartId: 112,
  orderId: 900
}, [object Object] {
  cartId: 223,
  orderId: 345
}, [object Object] {
  cartId: 343,
  orderId: 897
}]

QUIZ 9

class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
createOrder(orderId, cartId){
  let order = { orderId: orderId,cartId:cartId}
  this.orders.push(order)
    return this.orders
}
 
   getProduct(orderId){
    for(var i=0;i<this.orders.length; i++){
      let order=this.orders[i]
      if(order.id === orderId){
        return order
      }
    }
   }
cancelOrder(orderId){
  let order=this.getProduct(orderId);
    let index= this.orders.indexOf(order)
    this.orders.splice(index,1)
}
     
  
}
let mumMboga = new MumMboga();
   mumMboga.createOrder(900,112);
  mumMboga.createOrder(345,223);
  mumMboga.createOrder(897,343);
  mumMboga.cancelOrder(897);
  mumMboga.cancelOrder(1);  
console.log(mumMboga.orders);

ANS
[[object Object] {
  cartId: 112,
  orderId: 900

QUIZ 10
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
createOrder(orderId, cartId){
  let order = { orderId: orderId,cartId:cartId}
  this.orders.push(order)
    return this.orders
}

  calculateOrderCost(orderId){
    let order = { orderId: orderId};
    
    
    this.orders.push(order)
    return this.orders
  }
}
let mumMboga = new MumMboga();
   mumMboga.createOrder(900,112);
  mumMboga.createOrder(345,223);
  mumMboga.createOrder(897,343);
mumMboga.calculateOrderCost(sum(order[0]++);
console.log(mumMboga.orders);

QUIZ 11
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
createOrder(orderId, cartId){
  let order = { orderId: orderId,cartId:cartId}
  this.orders.push(order)
    return this.orders
}
getOrder(orderId ){
 let order = { orderId: orderId} 
 return this.orders
}
 
}
let mumMboga = new MumMboga();
   mumMboga.createOrder(900,112);
  mumMboga.createOrder(345,223);
  mumMboga.createOrder(897,343);
mumMboga.getOrder(897);
console.log(mumMboga.orders);

QUIZ 12
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
addCustomer(customerId, name, email, address ){
  let customer={customerId:customerId,name:name,email:email, address: address}
   this.customers.push(customer)
    return this.customers
}
 
}
let mumMboga = new MumMboga();
   mumMboga.addCustomer(23456,"mary","mary@gmail.com","kazi street");
  mumMboga.addCustomer(345223,"noon","noon@gmail.com","buggati street");
  mumMboga.addCustomer(897343,"bahati","baha@gmail.com","lazima strees");

console.log(mumMboga.customers);

ANS
[[object Object] {
  address: "kazi street",
  customerId: 23456,
  email: "mary@gmail.com",
  name: "mary"
}, [object Object] {
  address: "buggati street",
  customerId: 345223,
  email: "noon@gmail.com",
  name: "noon"
}, [object Object] {
  address: "lazima strees",
  customerId: 897343,
  email: "baha@gmail.com",
  name: "bahati"
}]

QUIZ 13 and 15
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
addCustomer(customerId, name, email, address ){
  let customer={customerId:customerId,name:name,email:email, address: address}
   this.customers.push(customer)
    return this.customers
}
   getCustomer(customerId){
    for(var i=0;i<this.customers.length; i++){
      let customer=this.customers[i]
      if(customer.id === customerId){
        return customer
      }
    }
  }
  removeCustomer(customerId){
    let customer=this.getCustomer(customerId);
    let index= this.customers.indexOf(customer)
    this.customers.splice(index,1)
  }
  
   

}
let mumMboga = new MumMboga();
   mumMboga.addCustomer(23456,"mary","mary@gmail.com","kazi street");
  mumMboga.addCustomer(345223,"noon","noon@gmail.com","buggati street");
  mumMboga.addCustomer(897343,"bahati","baha@gmail.com","lazima strees");
//mumMboga.removeCustomer(897343,"bahati","baha@gmail.com","lazima strees");
//mumMboga.removeCustomer(1);
console.log(mumMboga.customers);

ANS
[[object Object] {
  address: "kazi street",
  customerId: 23456,
  email: "mary@gmail.com",
  name: "mary"
}, [object Object] {
  address: "buggati street",
  customerId: 345223,
  email: "noon@gmail.com",
  name: "noon"
}]

QUIZ 14
class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }
addCustomer(customerId, name, email, address ){
  let customer={customerId:customerId,name:name,email:email, address: address}
   this.customers.push(customer)
    return this.customers
}
   getCustomer(customerId){
    for(var i=0;i<this.customers.length; i++){
      let customer=this.customers[i]
      if(customer.id === customerId){
        return customer
      }
    }
  }
  removeProduct(customerId){
    let customer=this.getCustomer(customerId);
    let index= this.customers.indexOf(customer)
    this.customers.splice(index,1)
  }
  
  updateCustomer(customerId, name, email, address) {
    let customer = this.getCustomer(customerId);
    let myIndex = this.customers.indexOf(customer);
    var newCustomer = this.customers[myIndex] = {customerId:customerId, name:name, email:email, address:address};
    this.customers.push(newCustomer)
    
    
   } 

}
let mumMboga = new MumMboga();
   mumMboga.addCustomer(23456,"mary","mary@gmail.com","kazi street");
  mumMboga.addCustomer(345223,"noon","noon@gmail.com","buggati street");
  mumMboga.addCustomer(897343,"bahati","baha@gmail.com","lazima streest");

mumMboga.updateCustomer(129383,"ann","ann@gmail.com","hakika streest");
console.log(mumMboga.customers);

ANS
[[object Object] {
  address: "kazi street",
  customerId: 23456,
  email: "mary@gmail.com",
  name: "mary"
}, [object Object] {
  address: "buggati street",
  customerId: 345223,
  email: "noon@gmail.com",
  name: "noon"
}, [object Object] {
  address: "lazima streest",
  customerId: 897343,
  email: "baha@gmail.com",
  name: "bahati"
}, [object Object] {
  address: "hakika streest",
  customerId: 129383,
  email: "ann@gmail.com",
  name: "ann"
}]